#!/bin/bash

PKG=$2

ROOT="$(dirname "$PWD")"

SRCDIR=$ROOT/src

PKGS=$SRCDIR/pkgs

PKGDIR=$SRCDIR/pkg/$PKG

BUILDDIR=$SRCDIR/build
DLDIR=$SRCDIR/dl

PKGFILE=$PKGDIR/build

PATCHES=$PKGDIR/patch

### SCRIPT VARIABLES ###

JOBS=$(nproc)

########################

pkg_open() {
  if [[ ! -d $PKGDIR ]]; then
    echo "package $PKG not found"
    exit 1
  fi
  if [[ ! -e $PKGFILE ]]; then
    echo "missing build file in $PKG package"
    exit 1
  fi
  . $PKGFILE
  if [[ -z $name ]]; then
    name=$PKG
  fi
  FULLNAME=$name-$ver
}

pkg_extract() {
  case $FILENAME in
  *.zip) unzip $FILENAME -d $BUILDDIR ; ;;
  *.tgz|*.gz) tar xzvf $FILENAME -C $BUILDDIR ; ;;
  *.tbz2|*.bz2) tar xjvf $FILENAME -C $BUILDDIR ; ;;
  *.xz) tar xf $FILENAME -C $BUILDDIR ; ;;
  esac
}

pkg_download() {
  FILENAME=$FULLNAME.$type

  if [[ $src == *"git"* ]] && [[ "`basename $src`" != *"."* ]]; then
    WORK=$BUILDDIR/$name

    cd $BUILDDIR

    if [[ -d $WORK ]]; then
      git pull
    else
      git clone $src $WORK
    fi

    return
  elif [[ -z $type ]]; then
    echo "missing package type in $PKG package"
    exit 1
  fi

  WORK=$BUILDDIR/$FULLNAME
  if [[ -d $WORK ]]; then
    return
  fi

  cd $DLDIR

  FILE=$DLDIR/$FILENAME
  if [[ ! -e $FILE ]]; then
    wget --no-check-certificate $src -O $FILENAME
  fi

  if [[ -e $FILE ]]; then
    pkg_extract
  else
    echo "failed to download, retrying"
    pkg_download
  fi
}

pkg_build() {
  cd $WORK
  if [[ -d $PATCHES ]]; then
    for patch in $PATCHES/*; do
      patch -p1 < $patch

    done
  fi
  build
}

pkg_install() {
  pkg_open
  if pkg_exists $PKG; then
    if [[ -z $src ]]; then
      for dep in "${deps[@]}"; do
        if ! pkg_exists $dep; then
          sh $ROOT/bin/nono -i $dep
        fi
      done
      return
    else
      echo "$PKG is already installed"
      exit 1
    fi
  fi
  if [[ -z $src ]]; then
    echo "installing package group: $PKG"
  else
    echo "installing package $FULLNAME"
  fi
  for dep in "${deps[@]}"; do
    sh $ROOT/bin/nono -i $dep
  done
  if [[ -z $src ]]; then
    echo "package group installed: $PKG"
  else
    pkg_download
    pkg_build
  fi
  echo $PKG >> $PKGS
  echo "installation finished: $FULLNAME"
}

pkg_exists() {
  while read line; do
    if [[ $line == $1 ]]; then
      return 0
    fi
  done < $PKGS
  return 1
}

pkg_remove() {
  while read line; do
    if [[ $line == $PKG ]]; then
      # set $line "" from $PKGS
      return
    fi
  done < $PKGS
}

help() {
  echo "nono -i package: install"
  echo "nono -r package: remove"
}

if [[ -z $PKG ]]; then
  echo "provide a package name"
  exit 1
fi

case $1 in
-i) pkg_install ; ;;
-r) pkg_remove ; ;;
*) help ; ;;
esac
